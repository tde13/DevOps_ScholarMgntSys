pipeline {

    agent any

    stages {

        stage('Checkout') {

            steps {

                // Manually checkout source code using Git

                git '
https://github.com/tde13/DevOps_ScholarMgntSys'

            }

        }

        stage('Build Frontend') {

            steps {

                dir('client') {

                    // Build Vue.js + Vite frontend

                    sh 'npm install'

                    sh 'npm run build'

                }

            }

        }

        stage('Build Backend') {

            steps {

                dir('backend') {

                    // Build Nest.js backend

                    sh 'npm install'

                    sh 'npm run build'

                }

            }

        }

        stage('Run Tests') {

            parallel {

                stage('Test in Firefox') {

                    steps {

                        catchError(buildResult: 'SUCCESS') {

                            dir('client') {

                                // Run Nightwatch tests in Firefox

                                sh 'npm install'

                                sh 'npm run test:firefox'

                            }

                        }

                    }

                }

                stage('Test in Chrome') {

                    steps {

                        catchError(buildResult: 'SUCCESS') {

                            dir('client') {

                                // Run Nightwatch tests in Firefox

                                sh 'npm install'

                                sh 'npm run test:chrome'

                            }

                        }

                    }

                }

            }

        }

        stage('Deploy') {

            steps {

                withCredentials([file(credentialsId: 'ssl_crt', variable: 'SSL_CERT'), file(credentialsId: 'ssl_key', variable: 'SSL_KEY')]) {

                    sh 'mkdir -p secrets'

                    sh 'chmod +w secrets'

                    sh 'cp -n $SSL_CERT secrets/ | true'

                    sh 'cp -n $SSL_KEY secrets/ | true'

                }



                withCredentials([usernamePassword(credentialsId: 'docker_cred', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {

                        // Your steps that require credentials go here

                        sh 'docker login --username $USERNAME --password $PASSWORD'

                    }



                sh 'docker build -t kshitiz17/group5 .'

                sh 'docker push kshitiz17/group5:latest'

            }

        }

    }

}
